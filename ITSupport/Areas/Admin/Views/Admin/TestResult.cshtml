@model ITSupport.Models.Question

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
<section ng-app="questionsApp" ng-controller="questionsCtrl">
    <h2>Ngân hàng câu hỏi</h2>

    <div class="d-flex">
        <button class="btn btn-primary" ng-click="reset()" data-toggle="modal" data-target="#upsert">
            <i class="fa fa-plus" aria-hidden="true"></i>
            Thêm mới
        </button>
        <form ng-submit="loadData()">
            <input class="form-control ml-3" placeholder="Từ khóa tìm kiếm..." type="search" ng-model="search" />
        </form>
    </div>
    <table class="table">
        <caption>
            <span ng-repeat="p in pages" ng-click="setPage(p)" class="btn mx-1 {{p == pageIndex ? 'btn-primary' : 'btn-default'}}">{{p}}</span>
        </caption>
        <tr>
            <th style="cursor:pointer;" ng-click="sortBy('User.Name')">
                Tên người dung <i class="fa fa-sort" aria-hidden="true"></i>
            </th>
            <th style="cursor:pointer;" ng-click="sortBy('Course.Name')">
                Tên khóa học <i class="fa fa-sort" aria-hidden="true"></i>
            </th>
            <th style="cursor:pointer;" ng-click="sortBy('Correct')">
                Điểm số <i class="fa fa-sort" aria-hidden="true"></i>
            </th>
            <th style="cursor:pointer;" ng-click="sortBy('StartTime')">
                Thời gian kiểm tra <i class="fa fa-sort" aria-hidden="true"></i>
            </th>
            <th style="cursor:pointer;" ng-click="sortBy('EndTime')">
                Thời gian kết thúc <i class="fa fa-sort" aria-hidden="true"></i>
            </th>
            @*<th></th>*@
        </tr>


        <tr ng-repeat="item in items">
            <td>
                {{item.user.name}}
            </td>
            <td>
                {{ item.course.name }}
            </td>
            <td>
                {{ item.total ? (10 / (item.total / item.correct)).toFixed(2) : 'Chưa hoàn thành' }}
            </td>
            <td>
                {{item.startTime | date : 'HH:mm dd/MM/yyyy'}}
            </td>
            <td ng-if="item.endTime">
                {{item.endTime| date : 'HH:mm dd/MM/yyyy'}}
            </td>
            <td ng-if="!item.endTime">
                Chưa hoàn thành
            </td>
            @*<td>
                <button class="btn btn-info" data-toggle="modal" data-target="#upsert" ng-click="update(item)">
                    <i class="fa fa-info" aria-hidden="true"></i>
                </button>
            </td>*@
        </tr>
    </table>

    <div class="modal fade" id="upsert" tabindex="-1" role="dialog" aria-labelledby="upsertLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="upsertLabel">{{ Id ? 'Chỉnh sửa câu hỏi' :'Thêm câu hỏi' }}</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                   
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
                    <button ng-click="save()" type="button" class="btn btn-primary">Lưu</button>
                </div>
            </div>
        </div>
    </div>

</section>
@section Scripts {
    <script>
        var app = angular.module('questionsApp', ['ngSanitize', 'ui.tinymce']);
        app.controller('questionsCtrl', function ($scope, $http) {
            $scope.pageIndex = 1;
            $scope.pageSize = 10;
            $scope.search = '';
            $scope.sort = null;
            $scope.item = {};
            $scope.items = [];
            $scope.pages = [];
            const loadData = () => {
                $('#upsert').modal('hide');
                $('#delete').modal('hide');
                let sort = '';
                if ($scope.sort) sort = `${$scope.sort}%20${$scope.sortOrder > 0 ? 'asc' : 'desc'}`
                $http.get(`/api/Courses/Result?pageIndex=${$scope.pageIndex}&pageSize=${$scope.pageSize}&search=${$scope.search}&sort=${sort}`)
                    .then(res => {
                        $scope.items = res.data.items;
                        $scope.total = res.data.total;
                        $scope.pages = [];
                        let total = $scope.total;
                        if (total < $scope.pageIndex * $scope.pageSize && $scope.pageIndex > 1) {
                            $scope.pages.push($scope.pageIndex - 1)
                        }
                        $scope.pages.push($scope.pageIndex);
                        if (total > $scope.pageIndex * $scope.pageSize) {
                            $scope.pages.push($scope.pageIndex + 1)
                        }
                        if (total > ($scope.pageIndex + 1) * $scope.pageSize && $scope.pages.length == 2) {
                            $scope.pages.push($scope.pageIndex + 2)
                        }
                    });
            }
            loadData();
            $scope.setPage = (pageIndex) => {
                $scope.pageIndex = pageIndex;
                loadData();
            }
            $scope.loadData = loadData;
            $scope.sortBy = (field) => {
                if ($scope.sort == field) $scope.sortOrder *= -1;
                else {
                    $scope.sort = field;
                    $scope.sortOrder = -1;
                }
                loadData();
            }


            $scope.update = function (item) {
                $scope.item = { ...item };
            }
        });
    </script>
}